Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencias
Rule 2     sentencias -> sentencia sentencias
Rule 3     sentencias -> sentencia
Rule 4     sentencia -> if_sentencia
Rule 5     sentencia -> for_sentencia
Rule 6     sentencia -> while_sentencia
Rule 7     sentencia -> asignacion DELIMITADOR
Rule 8     if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED
Rule 9     sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR
Rule 10    for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
Rule 11    while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED
Rule 12    asignacion -> ID OPERADOR expresion
Rule 13    asignacion -> ID OPERADOR ID
Rule 14    asignacion -> ID OPERADOR NUMERO
Rule 15    asignacion -> NUMERO ID
Rule 16    asignacion -> OPERADOR expresion
Rule 17    asignacion -> ID ID
Rule 18    expresion -> OPERADOR NUMERO
Rule 19    expresion -> OPERADOR ID
Rule 20    expresion -> ID OPERADOR NUMERO
Rule 21    expresion -> ID OPERADOR ID
Rule 22    expresion -> NUMERO OPERADOR NUMERO
Rule 23    expresion -> NUMERO OPERADOR ID
Rule 24    expresion -> ID
Rule 25    expresion -> NUMERO
Rule 26    sentencias -> <empty>
Rule 27    expresion_incremento -> ID OPERADOR
Rule 28    expresion_incremento -> ID OPERADOR NUMERO
Rule 29    expresion_incremento -> ID OPERADOR ID
Rule 30    expresion_incremento -> asignacion

Terminals, with rules where they appear

DELIMITADOR          : 7 9 10 10
FOR                  : 10
ID                   : 9 12 13 13 14 15 17 17 19 20 21 21 23 24 27 28 29 29
IF                   : 8
LLAVED               : 8 10 11
LLAVEI               : 8 10 11
NUMERO               : 9 14 15 18 20 22 22 23 25 28
OPERADOR             : 9 12 13 14 16 18 19 20 21 22 23 27 28 29
PD                   : 8 10 11
PI                   : 8 10 11
WHILE                : 11
error                : 

Nonterminals, with rules where they appear

asignacion           : 7 10 30
expresion            : 8 9 10 11 12 16
expresion_incremento : 10
for_sentencia        : 5
if_sentencia         : 4
programa             : 0
sentencia            : 2 3
sentencias           : 1 2 8 10 11
while_sentencia      : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencias
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (26) sentencias -> .
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (9) sentencia -> . NUMERO ID OPERADOR expresion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (10) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    $end            reduce using rule 26 (sentencias -> .)
    NUMERO          shift and go to state 8
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    ID              shift and go to state 9
    OPERADOR        shift and go to state 10

    programa                       shift and go to state 1
    sentencias                     shift and go to state 2
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencias .

    $end            reduce using rule 1 (programa -> sentencias .)


state 3

    (2) sentencias -> sentencia . sentencias
    (3) sentencias -> sentencia .
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (26) sentencias -> .
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (9) sentencia -> . NUMERO ID OPERADOR expresion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (10) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

  ! reduce/reduce conflict for $end resolved using rule 3 (sentencias -> sentencia .)
  ! reduce/reduce conflict for LLAVED resolved using rule 3 (sentencias -> sentencia .)
    $end            reduce using rule 3 (sentencias -> sentencia .)
    LLAVED          reduce using rule 3 (sentencias -> sentencia .)
    NUMERO          shift and go to state 8
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    ID              shift and go to state 9
    OPERADOR        shift and go to state 10

  ! $end            [ reduce using rule 26 (sentencias -> .) ]
  ! LLAVED          [ reduce using rule 26 (sentencias -> .) ]

    sentencia                      shift and go to state 3
    sentencias                     shift and go to state 14
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 4

    (4) sentencia -> if_sentencia .

    NUMERO          reduce using rule 4 (sentencia -> if_sentencia .)
    IF              reduce using rule 4 (sentencia -> if_sentencia .)
    FOR             reduce using rule 4 (sentencia -> if_sentencia .)
    WHILE           reduce using rule 4 (sentencia -> if_sentencia .)
    ID              reduce using rule 4 (sentencia -> if_sentencia .)
    OPERADOR        reduce using rule 4 (sentencia -> if_sentencia .)
    $end            reduce using rule 4 (sentencia -> if_sentencia .)
    LLAVED          reduce using rule 4 (sentencia -> if_sentencia .)


state 5

    (5) sentencia -> for_sentencia .

    NUMERO          reduce using rule 5 (sentencia -> for_sentencia .)
    IF              reduce using rule 5 (sentencia -> for_sentencia .)
    FOR             reduce using rule 5 (sentencia -> for_sentencia .)
    WHILE           reduce using rule 5 (sentencia -> for_sentencia .)
    ID              reduce using rule 5 (sentencia -> for_sentencia .)
    OPERADOR        reduce using rule 5 (sentencia -> for_sentencia .)
    $end            reduce using rule 5 (sentencia -> for_sentencia .)
    LLAVED          reduce using rule 5 (sentencia -> for_sentencia .)


state 6

    (6) sentencia -> while_sentencia .

    NUMERO          reduce using rule 6 (sentencia -> while_sentencia .)
    IF              reduce using rule 6 (sentencia -> while_sentencia .)
    FOR             reduce using rule 6 (sentencia -> while_sentencia .)
    WHILE           reduce using rule 6 (sentencia -> while_sentencia .)
    ID              reduce using rule 6 (sentencia -> while_sentencia .)
    OPERADOR        reduce using rule 6 (sentencia -> while_sentencia .)
    $end            reduce using rule 6 (sentencia -> while_sentencia .)
    LLAVED          reduce using rule 6 (sentencia -> while_sentencia .)


state 7

    (7) sentencia -> asignacion . DELIMITADOR

    DELIMITADOR     shift and go to state 15


state 8

    (9) sentencia -> NUMERO . ID OPERADOR expresion DELIMITADOR
    (15) asignacion -> NUMERO . ID

    ID              shift and go to state 16


state 9

    (12) asignacion -> ID . OPERADOR expresion
    (13) asignacion -> ID . OPERADOR ID
    (14) asignacion -> ID . OPERADOR NUMERO
    (17) asignacion -> ID . ID

    OPERADOR        shift and go to state 18
    ID              shift and go to state 17


state 10

    (16) asignacion -> OPERADOR . expresion
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    OPERADOR        shift and go to state 19
    ID              shift and go to state 22
    NUMERO          shift and go to state 21

    expresion                      shift and go to state 20

state 11

    (8) if_sentencia -> IF . PI expresion PD LLAVEI sentencias LLAVED

    PI              shift and go to state 23


state 12

    (10) for_sentencia -> FOR . PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    PI              shift and go to state 24


state 13

    (11) while_sentencia -> WHILE . PI expresion PD LLAVEI sentencias LLAVED

    PI              shift and go to state 25


state 14

    (2) sentencias -> sentencia sentencias .

    $end            reduce using rule 2 (sentencias -> sentencia sentencias .)
    LLAVED          reduce using rule 2 (sentencias -> sentencia sentencias .)


state 15

    (7) sentencia -> asignacion DELIMITADOR .

    NUMERO          reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    IF              reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    FOR             reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    WHILE           reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    ID              reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    OPERADOR        reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    $end            reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    LLAVED          reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)


state 16

    (9) sentencia -> NUMERO ID . OPERADOR expresion DELIMITADOR
    (15) asignacion -> NUMERO ID .

    OPERADOR        shift and go to state 26
    DELIMITADOR     reduce using rule 15 (asignacion -> NUMERO ID .)


state 17

    (17) asignacion -> ID ID .

    DELIMITADOR     reduce using rule 17 (asignacion -> ID ID .)
    PD              reduce using rule 17 (asignacion -> ID ID .)


state 18

    (12) asignacion -> ID OPERADOR . expresion
    (13) asignacion -> ID OPERADOR . ID
    (14) asignacion -> ID OPERADOR . NUMERO
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    ID              shift and go to state 27
    NUMERO          shift and go to state 29
    OPERADOR        shift and go to state 19

    expresion                      shift and go to state 28

state 19

    (18) expresion -> OPERADOR . NUMERO
    (19) expresion -> OPERADOR . ID

    NUMERO          shift and go to state 30
    ID              shift and go to state 31


state 20

    (16) asignacion -> OPERADOR expresion .

    DELIMITADOR     reduce using rule 16 (asignacion -> OPERADOR expresion .)
    PD              reduce using rule 16 (asignacion -> OPERADOR expresion .)


state 21

    (22) expresion -> NUMERO . OPERADOR NUMERO
    (23) expresion -> NUMERO . OPERADOR ID
    (25) expresion -> NUMERO .

    OPERADOR        shift and go to state 32
    DELIMITADOR     reduce using rule 25 (expresion -> NUMERO .)
    PD              reduce using rule 25 (expresion -> NUMERO .)


state 22

    (20) expresion -> ID . OPERADOR NUMERO
    (21) expresion -> ID . OPERADOR ID
    (24) expresion -> ID .

    OPERADOR        shift and go to state 33
    DELIMITADOR     reduce using rule 24 (expresion -> ID .)
    PD              reduce using rule 24 (expresion -> ID .)


state 23

    (8) if_sentencia -> IF PI . expresion PD LLAVEI sentencias LLAVED
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    OPERADOR        shift and go to state 19
    ID              shift and go to state 22
    NUMERO          shift and go to state 21

    expresion                      shift and go to state 34

state 24

    (10) for_sentencia -> FOR PI . asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    ID              shift and go to state 9
    NUMERO          shift and go to state 36
    OPERADOR        shift and go to state 10

    asignacion                     shift and go to state 35

state 25

    (11) while_sentencia -> WHILE PI . expresion PD LLAVEI sentencias LLAVED
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    OPERADOR        shift and go to state 19
    ID              shift and go to state 22
    NUMERO          shift and go to state 21

    expresion                      shift and go to state 37

state 26

    (9) sentencia -> NUMERO ID OPERADOR . expresion DELIMITADOR
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    OPERADOR        shift and go to state 19
    ID              shift and go to state 22
    NUMERO          shift and go to state 21

    expresion                      shift and go to state 38

state 27

    (13) asignacion -> ID OPERADOR ID .
    (20) expresion -> ID . OPERADOR NUMERO
    (21) expresion -> ID . OPERADOR ID
    (24) expresion -> ID .

  ! reduce/reduce conflict for DELIMITADOR resolved using rule 13 (asignacion -> ID OPERADOR ID .)
    DELIMITADOR     reduce using rule 13 (asignacion -> ID OPERADOR ID .)
    OPERADOR        shift and go to state 33

  ! DELIMITADOR     [ reduce using rule 24 (expresion -> ID .) ]


state 28

    (12) asignacion -> ID OPERADOR expresion .

    DELIMITADOR     reduce using rule 12 (asignacion -> ID OPERADOR expresion .)
    PD              reduce using rule 12 (asignacion -> ID OPERADOR expresion .)


state 29

    (14) asignacion -> ID OPERADOR NUMERO .
    (22) expresion -> NUMERO . OPERADOR NUMERO
    (23) expresion -> NUMERO . OPERADOR ID
    (25) expresion -> NUMERO .

  ! reduce/reduce conflict for DELIMITADOR resolved using rule 14 (asignacion -> ID OPERADOR NUMERO .)
    DELIMITADOR     reduce using rule 14 (asignacion -> ID OPERADOR NUMERO .)
    OPERADOR        shift and go to state 32

  ! DELIMITADOR     [ reduce using rule 25 (expresion -> NUMERO .) ]


state 30

    (18) expresion -> OPERADOR NUMERO .

    DELIMITADOR     reduce using rule 18 (expresion -> OPERADOR NUMERO .)
    PD              reduce using rule 18 (expresion -> OPERADOR NUMERO .)


state 31

    (19) expresion -> OPERADOR ID .

    DELIMITADOR     reduce using rule 19 (expresion -> OPERADOR ID .)
    PD              reduce using rule 19 (expresion -> OPERADOR ID .)


state 32

    (22) expresion -> NUMERO OPERADOR . NUMERO
    (23) expresion -> NUMERO OPERADOR . ID

    NUMERO          shift and go to state 39
    ID              shift and go to state 40


state 33

    (20) expresion -> ID OPERADOR . NUMERO
    (21) expresion -> ID OPERADOR . ID

    NUMERO          shift and go to state 42
    ID              shift and go to state 41


state 34

    (8) if_sentencia -> IF PI expresion . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 43


state 35

    (10) for_sentencia -> FOR PI asignacion . DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    DELIMITADOR     shift and go to state 44


state 36

    (15) asignacion -> NUMERO . ID

    ID              shift and go to state 45


state 37

    (11) while_sentencia -> WHILE PI expresion . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 46


state 38

    (9) sentencia -> NUMERO ID OPERADOR expresion . DELIMITADOR

    DELIMITADOR     shift and go to state 47


state 39

    (22) expresion -> NUMERO OPERADOR NUMERO .

    DELIMITADOR     reduce using rule 22 (expresion -> NUMERO OPERADOR NUMERO .)
    PD              reduce using rule 22 (expresion -> NUMERO OPERADOR NUMERO .)


state 40

    (23) expresion -> NUMERO OPERADOR ID .

    DELIMITADOR     reduce using rule 23 (expresion -> NUMERO OPERADOR ID .)
    PD              reduce using rule 23 (expresion -> NUMERO OPERADOR ID .)


state 41

    (21) expresion -> ID OPERADOR ID .

    DELIMITADOR     reduce using rule 21 (expresion -> ID OPERADOR ID .)
    PD              reduce using rule 21 (expresion -> ID OPERADOR ID .)


state 42

    (20) expresion -> ID OPERADOR NUMERO .

    DELIMITADOR     reduce using rule 20 (expresion -> ID OPERADOR NUMERO .)
    PD              reduce using rule 20 (expresion -> ID OPERADOR NUMERO .)


state 43

    (8) if_sentencia -> IF PI expresion PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 48


state 44

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR . expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    OPERADOR        shift and go to state 19
    ID              shift and go to state 22
    NUMERO          shift and go to state 21

    expresion                      shift and go to state 49

state 45

    (15) asignacion -> NUMERO ID .

    DELIMITADOR     reduce using rule 15 (asignacion -> NUMERO ID .)
    PD              reduce using rule 15 (asignacion -> NUMERO ID .)


state 46

    (11) while_sentencia -> WHILE PI expresion PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 50


state 47

    (9) sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .

    NUMERO          reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    IF              reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    FOR             reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    WHILE           reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    ID              reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    OPERADOR        reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    $end            reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)
    LLAVED          reduce using rule 9 (sentencia -> NUMERO ID OPERADOR expresion DELIMITADOR .)


state 48

    (8) if_sentencia -> IF PI expresion PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (26) sentencias -> .
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (9) sentencia -> . NUMERO ID OPERADOR expresion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (10) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    LLAVED          reduce using rule 26 (sentencias -> .)
    NUMERO          shift and go to state 8
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    ID              shift and go to state 9
    OPERADOR        shift and go to state 10

    sentencias                     shift and go to state 51
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 49

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion . DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    DELIMITADOR     shift and go to state 52


state 50

    (11) while_sentencia -> WHILE PI expresion PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (26) sentencias -> .
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (9) sentencia -> . NUMERO ID OPERADOR expresion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (10) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    LLAVED          reduce using rule 26 (sentencias -> .)
    NUMERO          shift and go to state 8
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    ID              shift and go to state 9
    OPERADOR        shift and go to state 10

    sentencias                     shift and go to state 53
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 51

    (8) if_sentencia -> IF PI expresion PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 54


state 52

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR . expresion_incremento PD LLAVEI sentencias LLAVED
    (27) expresion_incremento -> . ID OPERADOR
    (28) expresion_incremento -> . ID OPERADOR NUMERO
    (29) expresion_incremento -> . ID OPERADOR ID
    (30) expresion_incremento -> . asignacion
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    ID              shift and go to state 57
    NUMERO          shift and go to state 36
    OPERADOR        shift and go to state 10

    asignacion                     shift and go to state 55
    expresion_incremento           shift and go to state 56

state 53

    (11) while_sentencia -> WHILE PI expresion PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 58


state 54

    (8) if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .

    NUMERO          reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    IF              reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    OPERADOR        reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)


state 55

    (30) expresion_incremento -> asignacion .

    PD              reduce using rule 30 (expresion_incremento -> asignacion .)


state 56

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 59


state 57

    (27) expresion_incremento -> ID . OPERADOR
    (28) expresion_incremento -> ID . OPERADOR NUMERO
    (29) expresion_incremento -> ID . OPERADOR ID
    (12) asignacion -> ID . OPERADOR expresion
    (13) asignacion -> ID . OPERADOR ID
    (14) asignacion -> ID . OPERADOR NUMERO
    (17) asignacion -> ID . ID

    OPERADOR        shift and go to state 60
    ID              shift and go to state 17


state 58

    (11) while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .

    NUMERO          reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    IF              reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    OPERADOR        reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 11 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)


state 59

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 61


state 60

    (27) expresion_incremento -> ID OPERADOR .
    (28) expresion_incremento -> ID OPERADOR . NUMERO
    (29) expresion_incremento -> ID OPERADOR . ID
    (12) asignacion -> ID OPERADOR . expresion
    (13) asignacion -> ID OPERADOR . ID
    (14) asignacion -> ID OPERADOR . NUMERO
    (18) expresion -> . OPERADOR NUMERO
    (19) expresion -> . OPERADOR ID
    (20) expresion -> . ID OPERADOR NUMERO
    (21) expresion -> . ID OPERADOR ID
    (22) expresion -> . NUMERO OPERADOR NUMERO
    (23) expresion -> . NUMERO OPERADOR ID
    (24) expresion -> . ID
    (25) expresion -> . NUMERO

    PD              reduce using rule 27 (expresion_incremento -> ID OPERADOR .)
    NUMERO          shift and go to state 63
    ID              shift and go to state 62
    OPERADOR        shift and go to state 19

    expresion                      shift and go to state 28

state 61

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (26) sentencias -> .
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (9) sentencia -> . NUMERO ID OPERADOR expresion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (10) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (12) asignacion -> . ID OPERADOR expresion
    (13) asignacion -> . ID OPERADOR ID
    (14) asignacion -> . ID OPERADOR NUMERO
    (15) asignacion -> . NUMERO ID
    (16) asignacion -> . OPERADOR expresion
    (17) asignacion -> . ID ID

    LLAVED          reduce using rule 26 (sentencias -> .)
    NUMERO          shift and go to state 8
    IF              shift and go to state 11
    FOR             shift and go to state 12
    WHILE           shift and go to state 13
    ID              shift and go to state 9
    OPERADOR        shift and go to state 10

    asignacion                     shift and go to state 7
    sentencias                     shift and go to state 64
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6

state 62

    (29) expresion_incremento -> ID OPERADOR ID .
    (13) asignacion -> ID OPERADOR ID .
    (20) expresion -> ID . OPERADOR NUMERO
    (21) expresion -> ID . OPERADOR ID
    (24) expresion -> ID .

  ! reduce/reduce conflict for PD resolved using rule 13 (asignacion -> ID OPERADOR ID .)
  ! reduce/reduce conflict for PD resolved using rule 13 (asignacion -> ID OPERADOR ID .)
    PD              reduce using rule 13 (asignacion -> ID OPERADOR ID .)
    OPERADOR        shift and go to state 33

  ! PD              [ reduce using rule 29 (expresion_incremento -> ID OPERADOR ID .) ]
  ! PD              [ reduce using rule 24 (expresion -> ID .) ]


state 63

    (28) expresion_incremento -> ID OPERADOR NUMERO .
    (14) asignacion -> ID OPERADOR NUMERO .
    (22) expresion -> NUMERO . OPERADOR NUMERO
    (23) expresion -> NUMERO . OPERADOR ID
    (25) expresion -> NUMERO .

  ! reduce/reduce conflict for PD resolved using rule 14 (asignacion -> ID OPERADOR NUMERO .)
  ! reduce/reduce conflict for PD resolved using rule 14 (asignacion -> ID OPERADOR NUMERO .)
    PD              reduce using rule 14 (asignacion -> ID OPERADOR NUMERO .)
    OPERADOR        shift and go to state 32

  ! PD              [ reduce using rule 28 (expresion_incremento -> ID OPERADOR NUMERO .) ]
  ! PD              [ reduce using rule 25 (expresion -> NUMERO .) ]


state 64

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 65


state 65

    (10) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .

    NUMERO          reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    IF              reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    OPERADOR        reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 10 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 3 resolved using rule (sentencias -> sentencia)
WARNING: rejected rule (sentencias -> <empty>) in state 3
WARNING: reduce/reduce conflict in state 27 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion -> ID) in state 27
WARNING: reduce/reduce conflict in state 29 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion -> NUMERO) in state 29
WARNING: reduce/reduce conflict in state 62 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion_incremento -> ID OPERADOR ID) in state 62
WARNING: reduce/reduce conflict in state 62 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion -> ID) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion_incremento -> ID OPERADOR NUMERO) in state 63
WARNING: reduce/reduce conflict in state 63 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion -> NUMERO) in state 63
WARNING: Rule (expresion_incremento -> ID OPERADOR ID) is never reduced
WARNING: Rule (expresion_incremento -> ID OPERADOR NUMERO) is never reduced
