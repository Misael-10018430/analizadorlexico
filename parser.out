Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencias
Rule 2     sentencias -> sentencia sentencias
Rule 3     sentencias -> sentencia
Rule 4     sentencia -> if_sentencia
Rule 5     sentencia -> for_sentencia
Rule 6     sentencia -> while_sentencia
Rule 7     sentencia -> asignacion DELIMITADOR
Rule 8     if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED
Rule 9     for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
Rule 10    while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED
Rule 11    asignacion -> ID OPERADOR expresion
Rule 12    asignacion -> ID OPERADOR ID
Rule 13    asignacion -> ID OPERADOR NUMERO
Rule 14    asignacion_simple -> ID OPERADOR NUMERO
Rule 15    asignacion_simple -> ID OPERADOR ID
Rule 16    expresion -> ID OPERADOR NUMERO
Rule 17    expresion -> ID OPERADOR ID
Rule 18    expresion -> NUMERO OPERADOR NUMERO
Rule 19    expresion -> NUMERO OPERADOR ID
Rule 20    expresion -> ID
Rule 21    expresion -> NUMERO
Rule 22    expresion_incremento -> ID OPERADOR OPERADOR
Rule 23    expresion_incremento -> ID OPERADOR NUMERO
Rule 24    expresion_incremento -> ID OPERADOR ID
Rule 25    expresion_incremento -> asignacion

Terminals, with rules where they appear

DELIMITADOR          : 7 9 9
FOR                  : 9
ID                   : 11 12 12 13 14 15 15 16 17 17 19 20 22 23 24 24
IF                   : 8
LLAVED               : 8 9 10
LLAVEI               : 8 9 10
NUMERO               : 13 14 16 18 18 19 21 23
OPERADOR             : 11 12 13 14 15 16 17 18 19 22 22 23 24
PD                   : 8 9 10
PI                   : 8 9 10
WHILE                : 10
error                : 

Nonterminals, with rules where they appear

asignacion           : 7 9 25
asignacion_simple    : 
expresion            : 8 9 10 11
expresion_incremento : 9
for_sentencia        : 5
if_sentencia         : 4
programa             : 0
sentencia            : 2 3
sentencias           : 1 2 8 9 10
while_sentencia      : 6

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . sentencias
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (9) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (10) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    ID              shift and go to state 11

    programa                       shift and go to state 1
    sentencias                     shift and go to state 2
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 1

    (0) S' -> programa .



state 2

    (1) programa -> sentencias .

    $end            reduce using rule 1 (programa -> sentencias .)


state 3

    (2) sentencias -> sentencia . sentencias
    (3) sentencias -> sentencia .
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (9) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (10) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    $end            reduce using rule 3 (sentencias -> sentencia .)
    LLAVED          reduce using rule 3 (sentencias -> sentencia .)
    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    ID              shift and go to state 11

    sentencia                      shift and go to state 3
    sentencias                     shift and go to state 12
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 4

    (4) sentencia -> if_sentencia .

    IF              reduce using rule 4 (sentencia -> if_sentencia .)
    FOR             reduce using rule 4 (sentencia -> if_sentencia .)
    WHILE           reduce using rule 4 (sentencia -> if_sentencia .)
    ID              reduce using rule 4 (sentencia -> if_sentencia .)
    $end            reduce using rule 4 (sentencia -> if_sentencia .)
    LLAVED          reduce using rule 4 (sentencia -> if_sentencia .)


state 5

    (5) sentencia -> for_sentencia .

    IF              reduce using rule 5 (sentencia -> for_sentencia .)
    FOR             reduce using rule 5 (sentencia -> for_sentencia .)
    WHILE           reduce using rule 5 (sentencia -> for_sentencia .)
    ID              reduce using rule 5 (sentencia -> for_sentencia .)
    $end            reduce using rule 5 (sentencia -> for_sentencia .)
    LLAVED          reduce using rule 5 (sentencia -> for_sentencia .)


state 6

    (6) sentencia -> while_sentencia .

    IF              reduce using rule 6 (sentencia -> while_sentencia .)
    FOR             reduce using rule 6 (sentencia -> while_sentencia .)
    WHILE           reduce using rule 6 (sentencia -> while_sentencia .)
    ID              reduce using rule 6 (sentencia -> while_sentencia .)
    $end            reduce using rule 6 (sentencia -> while_sentencia .)
    LLAVED          reduce using rule 6 (sentencia -> while_sentencia .)


state 7

    (7) sentencia -> asignacion . DELIMITADOR

    DELIMITADOR     shift and go to state 13


state 8

    (8) if_sentencia -> IF . PI expresion PD LLAVEI sentencias LLAVED

    PI              shift and go to state 14


state 9

    (9) for_sentencia -> FOR . PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    PI              shift and go to state 15


state 10

    (10) while_sentencia -> WHILE . PI expresion PD LLAVEI sentencias LLAVED

    PI              shift and go to state 16


state 11

    (11) asignacion -> ID . OPERADOR expresion
    (12) asignacion -> ID . OPERADOR ID
    (13) asignacion -> ID . OPERADOR NUMERO

    OPERADOR        shift and go to state 17


state 12

    (2) sentencias -> sentencia sentencias .

    $end            reduce using rule 2 (sentencias -> sentencia sentencias .)
    LLAVED          reduce using rule 2 (sentencias -> sentencia sentencias .)


state 13

    (7) sentencia -> asignacion DELIMITADOR .

    IF              reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    FOR             reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    WHILE           reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    ID              reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    $end            reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)
    LLAVED          reduce using rule 7 (sentencia -> asignacion DELIMITADOR .)


state 14

    (8) if_sentencia -> IF PI . expresion PD LLAVEI sentencias LLAVED
    (16) expresion -> . ID OPERADOR NUMERO
    (17) expresion -> . ID OPERADOR ID
    (18) expresion -> . NUMERO OPERADOR NUMERO
    (19) expresion -> . NUMERO OPERADOR ID
    (20) expresion -> . ID
    (21) expresion -> . NUMERO

    ID              shift and go to state 19
    NUMERO          shift and go to state 20

    expresion                      shift and go to state 18

state 15

    (9) for_sentencia -> FOR PI . asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    ID              shift and go to state 11

    asignacion                     shift and go to state 21

state 16

    (10) while_sentencia -> WHILE PI . expresion PD LLAVEI sentencias LLAVED
    (16) expresion -> . ID OPERADOR NUMERO
    (17) expresion -> . ID OPERADOR ID
    (18) expresion -> . NUMERO OPERADOR NUMERO
    (19) expresion -> . NUMERO OPERADOR ID
    (20) expresion -> . ID
    (21) expresion -> . NUMERO

    ID              shift and go to state 19
    NUMERO          shift and go to state 20

    expresion                      shift and go to state 22

state 17

    (11) asignacion -> ID OPERADOR . expresion
    (12) asignacion -> ID OPERADOR . ID
    (13) asignacion -> ID OPERADOR . NUMERO
    (16) expresion -> . ID OPERADOR NUMERO
    (17) expresion -> . ID OPERADOR ID
    (18) expresion -> . NUMERO OPERADOR NUMERO
    (19) expresion -> . NUMERO OPERADOR ID
    (20) expresion -> . ID
    (21) expresion -> . NUMERO

    ID              shift and go to state 23
    NUMERO          shift and go to state 25

    expresion                      shift and go to state 24

state 18

    (8) if_sentencia -> IF PI expresion . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 26


state 19

    (16) expresion -> ID . OPERADOR NUMERO
    (17) expresion -> ID . OPERADOR ID
    (20) expresion -> ID .

    OPERADOR        shift and go to state 27
    PD              reduce using rule 20 (expresion -> ID .)
    DELIMITADOR     reduce using rule 20 (expresion -> ID .)


state 20

    (18) expresion -> NUMERO . OPERADOR NUMERO
    (19) expresion -> NUMERO . OPERADOR ID
    (21) expresion -> NUMERO .

    OPERADOR        shift and go to state 28
    PD              reduce using rule 21 (expresion -> NUMERO .)
    DELIMITADOR     reduce using rule 21 (expresion -> NUMERO .)


state 21

    (9) for_sentencia -> FOR PI asignacion . DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    DELIMITADOR     shift and go to state 29


state 22

    (10) while_sentencia -> WHILE PI expresion . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 30


state 23

    (12) asignacion -> ID OPERADOR ID .
    (16) expresion -> ID . OPERADOR NUMERO
    (17) expresion -> ID . OPERADOR ID
    (20) expresion -> ID .

  ! reduce/reduce conflict for DELIMITADOR resolved using rule 12 (asignacion -> ID OPERADOR ID .)
    DELIMITADOR     reduce using rule 12 (asignacion -> ID OPERADOR ID .)
    OPERADOR        shift and go to state 27

  ! DELIMITADOR     [ reduce using rule 20 (expresion -> ID .) ]


state 24

    (11) asignacion -> ID OPERADOR expresion .

    DELIMITADOR     reduce using rule 11 (asignacion -> ID OPERADOR expresion .)
    PD              reduce using rule 11 (asignacion -> ID OPERADOR expresion .)


state 25

    (13) asignacion -> ID OPERADOR NUMERO .
    (18) expresion -> NUMERO . OPERADOR NUMERO
    (19) expresion -> NUMERO . OPERADOR ID
    (21) expresion -> NUMERO .

  ! reduce/reduce conflict for DELIMITADOR resolved using rule 13 (asignacion -> ID OPERADOR NUMERO .)
    DELIMITADOR     reduce using rule 13 (asignacion -> ID OPERADOR NUMERO .)
    OPERADOR        shift and go to state 28

  ! DELIMITADOR     [ reduce using rule 21 (expresion -> NUMERO .) ]


state 26

    (8) if_sentencia -> IF PI expresion PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 31


state 27

    (16) expresion -> ID OPERADOR . NUMERO
    (17) expresion -> ID OPERADOR . ID

    NUMERO          shift and go to state 33
    ID              shift and go to state 32


state 28

    (18) expresion -> NUMERO OPERADOR . NUMERO
    (19) expresion -> NUMERO OPERADOR . ID

    NUMERO          shift and go to state 34
    ID              shift and go to state 35


state 29

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR . expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (16) expresion -> . ID OPERADOR NUMERO
    (17) expresion -> . ID OPERADOR ID
    (18) expresion -> . NUMERO OPERADOR NUMERO
    (19) expresion -> . NUMERO OPERADOR ID
    (20) expresion -> . ID
    (21) expresion -> . NUMERO

    ID              shift and go to state 19
    NUMERO          shift and go to state 20

    expresion                      shift and go to state 36

state 30

    (10) while_sentencia -> WHILE PI expresion PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 37


state 31

    (8) if_sentencia -> IF PI expresion PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (9) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (10) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    ID              shift and go to state 11

    sentencias                     shift and go to state 38
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 32

    (17) expresion -> ID OPERADOR ID .

    PD              reduce using rule 17 (expresion -> ID OPERADOR ID .)
    DELIMITADOR     reduce using rule 17 (expresion -> ID OPERADOR ID .)


state 33

    (16) expresion -> ID OPERADOR NUMERO .

    PD              reduce using rule 16 (expresion -> ID OPERADOR NUMERO .)
    DELIMITADOR     reduce using rule 16 (expresion -> ID OPERADOR NUMERO .)


state 34

    (18) expresion -> NUMERO OPERADOR NUMERO .

    PD              reduce using rule 18 (expresion -> NUMERO OPERADOR NUMERO .)
    DELIMITADOR     reduce using rule 18 (expresion -> NUMERO OPERADOR NUMERO .)


state 35

    (19) expresion -> NUMERO OPERADOR ID .

    PD              reduce using rule 19 (expresion -> NUMERO OPERADOR ID .)
    DELIMITADOR     reduce using rule 19 (expresion -> NUMERO OPERADOR ID .)


state 36

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion . DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED

    DELIMITADOR     shift and go to state 39


state 37

    (10) while_sentencia -> WHILE PI expresion PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (9) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (10) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    ID              shift and go to state 11

    sentencias                     shift and go to state 40
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6
    asignacion                     shift and go to state 7

state 38

    (8) if_sentencia -> IF PI expresion PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 41


state 39

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR . expresion_incremento PD LLAVEI sentencias LLAVED
    (22) expresion_incremento -> . ID OPERADOR OPERADOR
    (23) expresion_incremento -> . ID OPERADOR NUMERO
    (24) expresion_incremento -> . ID OPERADOR ID
    (25) expresion_incremento -> . asignacion
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    ID              shift and go to state 44

    asignacion                     shift and go to state 42
    expresion_incremento           shift and go to state 43

state 40

    (10) while_sentencia -> WHILE PI expresion PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 45


state 41

    (8) if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .

    IF              reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 8 (if_sentencia -> IF PI expresion PD LLAVEI sentencias LLAVED .)


state 42

    (25) expresion_incremento -> asignacion .

    PD              reduce using rule 25 (expresion_incremento -> asignacion .)


state 43

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento . PD LLAVEI sentencias LLAVED

    PD              shift and go to state 46


state 44

    (22) expresion_incremento -> ID . OPERADOR OPERADOR
    (23) expresion_incremento -> ID . OPERADOR NUMERO
    (24) expresion_incremento -> ID . OPERADOR ID
    (11) asignacion -> ID . OPERADOR expresion
    (12) asignacion -> ID . OPERADOR ID
    (13) asignacion -> ID . OPERADOR NUMERO

    OPERADOR        shift and go to state 47


state 45

    (10) while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .

    IF              reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 10 (while_sentencia -> WHILE PI expresion PD LLAVEI sentencias LLAVED .)


state 46

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD . LLAVEI sentencias LLAVED

    LLAVEI          shift and go to state 48


state 47

    (22) expresion_incremento -> ID OPERADOR . OPERADOR
    (23) expresion_incremento -> ID OPERADOR . NUMERO
    (24) expresion_incremento -> ID OPERADOR . ID
    (11) asignacion -> ID OPERADOR . expresion
    (12) asignacion -> ID OPERADOR . ID
    (13) asignacion -> ID OPERADOR . NUMERO
    (16) expresion -> . ID OPERADOR NUMERO
    (17) expresion -> . ID OPERADOR ID
    (18) expresion -> . NUMERO OPERADOR NUMERO
    (19) expresion -> . NUMERO OPERADOR ID
    (20) expresion -> . ID
    (21) expresion -> . NUMERO

    OPERADOR        shift and go to state 50
    NUMERO          shift and go to state 51
    ID              shift and go to state 49

    expresion                      shift and go to state 24

state 48

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI . sentencias LLAVED
    (2) sentencias -> . sentencia sentencias
    (3) sentencias -> . sentencia
    (4) sentencia -> . if_sentencia
    (5) sentencia -> . for_sentencia
    (6) sentencia -> . while_sentencia
    (7) sentencia -> . asignacion DELIMITADOR
    (8) if_sentencia -> . IF PI expresion PD LLAVEI sentencias LLAVED
    (9) for_sentencia -> . FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED
    (10) while_sentencia -> . WHILE PI expresion PD LLAVEI sentencias LLAVED
    (11) asignacion -> . ID OPERADOR expresion
    (12) asignacion -> . ID OPERADOR ID
    (13) asignacion -> . ID OPERADOR NUMERO

    IF              shift and go to state 8
    FOR             shift and go to state 9
    WHILE           shift and go to state 10
    ID              shift and go to state 11

    asignacion                     shift and go to state 7
    sentencias                     shift and go to state 52
    sentencia                      shift and go to state 3
    if_sentencia                   shift and go to state 4
    for_sentencia                  shift and go to state 5
    while_sentencia                shift and go to state 6

state 49

    (24) expresion_incremento -> ID OPERADOR ID .
    (12) asignacion -> ID OPERADOR ID .
    (16) expresion -> ID . OPERADOR NUMERO
    (17) expresion -> ID . OPERADOR ID
    (20) expresion -> ID .

  ! reduce/reduce conflict for PD resolved using rule 12 (asignacion -> ID OPERADOR ID .)
  ! reduce/reduce conflict for PD resolved using rule 12 (asignacion -> ID OPERADOR ID .)
    PD              reduce using rule 12 (asignacion -> ID OPERADOR ID .)
    OPERADOR        shift and go to state 27

  ! PD              [ reduce using rule 24 (expresion_incremento -> ID OPERADOR ID .) ]
  ! PD              [ reduce using rule 20 (expresion -> ID .) ]


state 50

    (22) expresion_incremento -> ID OPERADOR OPERADOR .

    PD              reduce using rule 22 (expresion_incremento -> ID OPERADOR OPERADOR .)


state 51

    (23) expresion_incremento -> ID OPERADOR NUMERO .
    (13) asignacion -> ID OPERADOR NUMERO .
    (18) expresion -> NUMERO . OPERADOR NUMERO
    (19) expresion -> NUMERO . OPERADOR ID
    (21) expresion -> NUMERO .

  ! reduce/reduce conflict for PD resolved using rule 13 (asignacion -> ID OPERADOR NUMERO .)
  ! reduce/reduce conflict for PD resolved using rule 13 (asignacion -> ID OPERADOR NUMERO .)
    PD              reduce using rule 13 (asignacion -> ID OPERADOR NUMERO .)
    OPERADOR        shift and go to state 28

  ! PD              [ reduce using rule 23 (expresion_incremento -> ID OPERADOR NUMERO .) ]
  ! PD              [ reduce using rule 21 (expresion -> NUMERO .) ]


state 52

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias . LLAVED

    LLAVED          shift and go to state 53


state 53

    (9) for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .

    IF              reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    FOR             reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    WHILE           reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    ID              reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    $end            reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)
    LLAVED          reduce using rule 9 (for_sentencia -> FOR PI asignacion DELIMITADOR expresion DELIMITADOR expresion_incremento PD LLAVEI sentencias LLAVED .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 23 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion -> ID) in state 23
WARNING: reduce/reduce conflict in state 25 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion -> NUMERO) in state 25
WARNING: reduce/reduce conflict in state 49 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion_incremento -> ID OPERADOR ID) in state 49
WARNING: reduce/reduce conflict in state 49 resolved using rule (asignacion -> ID OPERADOR ID)
WARNING: rejected rule (expresion -> ID) in state 49
WARNING: reduce/reduce conflict in state 51 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion_incremento -> ID OPERADOR NUMERO) in state 51
WARNING: reduce/reduce conflict in state 51 resolved using rule (asignacion -> ID OPERADOR NUMERO)
WARNING: rejected rule (expresion -> NUMERO) in state 51
WARNING: Rule (expresion_incremento -> ID OPERADOR ID) is never reduced
WARNING: Rule (expresion_incremento -> ID OPERADOR NUMERO) is never reduced
